name: Foodgram workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies and flake8
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r requirements.txt 

    - name: Test with flake8
      run: |
        python -m flake8

  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: tests
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to Docker
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Push backend to Docker Hub
          uses: docker/build-push-action@v2
          with:
            context: ./backend/api_foodgram
            file: ./backend/api_foodgram/Dockerfile
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
        - name: Push frontend to Docker Hub
          uses: docker/build-push-action@v2
          with:
            context: ./frontend
            file: ./frontend/Dockerfile
            push: true
            tags: ${{  secrets.DOCKER_USERNAME  }}/foodgram_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker compose stop
            sudo docker compose rm -f web
            sudo docker image rm ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
            rm .env
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker compose pull
            sudo docker compose up --build -d